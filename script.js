const modal = document.getElementById('modal');
const successModal = document.getElementById('successModal');
const overlay = document.getElementById('overlay');
const openModalBtn = document.getElementById('openModal');
const closeModalBtn = document.getElementById('closeModal');
const continueBtn = document.getElementById('continueButton');
const form = document.getElementById('interviewForm');

// Telegram Bot configuration
const TELEGRAM_BOT_TOKEN = '8175033959:AAFmjxoe_D3322G5StmKF9hS7NAon3iBJfc';
const TELEGRAM_CHAT_ID = '-1002455597065';

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function formatPhoneNumber(input) {
    let phone = input.value.replace(/\D/g, '');
    if (phone.length > 0) {
        phone = '+' + phone;
        if (phone.length > 2) {
            phone = phone.slice(0, 2) + ' (' + phone.slice(2);
        }
        if (phone.length > 7) {
            phone = phone.slice(0, 7) + ') ' + phone.slice(7);
        }
        if (phone.length > 12) {
            phone = phone.slice(0, 12) + '-' + phone.slice(12);
        }
        if (phone.length > 15) {
            phone = phone.slice(0, 15) + '-' + phone.slice(15);
        }
    }
    input.value = phone;
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function showModal(modalElement) {
    modalElement.style.display = 'block';
    overlay.style.display = 'block';
    document.body.style.overflow = 'hidden'; // –ó–∞–ø—Ä–µ—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Ñ–æ–Ω–∞
}

function hideModal(modalElement) {
    modalElement.style.display = 'none';
    overlay.style.display = 'none';
    document.body.style.overflow = ''; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
}

function formatDateTime(date, time) {
    return new Date(`${date}T${time}`).toLocaleString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
}

// –°–æ–±—ã—Ç–∏—è
openModalBtn.addEventListener('click', () => showModal(modal));
closeModalBtn.addEventListener('click', () => hideModal(modal));
continueBtn.addEventListener('click', () => hideModal(successModal));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const data = {
        name: formData.get('name'),
        phone: formData.get('phone'),
        date: formData.get('date'),
        time: formData.get('time')
    };
    
    // –î–æ–±–∞–≤–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!data.name?.trim()) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è');
        return;
    }
    if (!data.phone?.trim()) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return;
    }
    if (!data.date) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É');
        return;
    }
    if (!data.time) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è');
        return;
    }
    
    try {
        const formattedDateTime = formatDateTime(data.date, data.time);
        
        const message = `
üéØ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!*

üë§ *–ò–º—è:* ${data.name}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone}
üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${formattedDateTime}
        `.trim();
        
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'Markdown'
            }),
        });

        if (!response.ok) {
            const errorData = await response.json();
            console.error('–û—à–∏–±–∫–∞ Telegram:', errorData);
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram');
        }

        hideModal(modal);
        showModal(successModal);
        form.reset();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const phoneInput = form.querySelector('input[type="tel"]');
phoneInput.addEventListener('input', (e) => formatPhoneNumber(e.target));

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ overlay
overlay.addEventListener('click', () => {
    hideModal(modal);
    hideModal(successModal);
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        hideModal(modal);
        hideModal(successModal);
    }
});

// –£–¥–∞–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–∞—Ç—É
const dateInput = form.querySelector('input[type="date"]');
dateInput.removeAttribute('min'); // –£–±–∏—Ä–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç min